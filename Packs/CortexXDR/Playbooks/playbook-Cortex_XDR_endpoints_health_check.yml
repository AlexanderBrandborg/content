id: Cortex XDR endpoints health check
version: -1
name: Cortex XDR endpoints health check
description: |-
  This playbook queries disconnected/lost Cortex XDR endpoints with a provided last seen time range playbook input.
  The playbook generates a CSV report, including a detailed list of the unhealthy endpoints, and sends the report to the provided email addresses.
  The playbook includes an incident type with a dedicated layout to visualize the collected data.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 925f1b74-3991-4f2e-89e6-a85dbb33c8ce
    type: start
    task:
      id: 925f1b74-3991-4f2e-89e6-a85dbb33c8ce
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 40
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 90dd7f1d-99f4-47bd-8b40-33f44bbc3337
    type: regular
    task:
      id: 90dd7f1d-99f4-47bd-8b40-33f44bbc3337
      version: -1
      name: 'Get XDR unhealthy endpoints '
      description: Gets a list of endpoints, according to the passed filters. If there
        are no filters, all endpoints are returned. Filtering by multiple fields will
        be concatenated using the AND condition (OR is not supported). The maximum result
        set size is 100. Offset is the zero-based number of the endpoint from the start
        of the result set (start by counting from 0).
      script: '|||xdr-get-endpoints'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      alias_name: {}
      dist_name: {}
      endpoint_id_list: {}
      first_seen_gte: {}
      first_seen_lte: {}
      group_name: {}
      hostname: {}
      ip_list: {}
      isolate: {}
      last_seen_gte:
        complex:
          root: inputs.LastSeenStartDate
      last_seen_lte:
        complex:
          root: inputs.LastSeenEndDate
      limit: {}
      page: {}
      platform: {}
      sort_by: {}
      sort_order: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 205
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: b433cbc5-c326-479d-8861-417257afe8d6
    type: regular
    task:
      id: b433cbc5-c326-479d-8861-417257afe8d6
      version: -1
      name: Generate a CSV report for unhealthy XDR endpoints
      description: Export the given array to a CSV file.
      tags:
      - Endpoint report
      scriptName: ExportToCSV
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      csvArray:
        complex:
          root: PaloAltoNetworksXDR.Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.Endpoint.endpoint_status
                iscontext: true
              right:
                value:
                  simple: LOST
      fileName:
        simple: Disconnected XDR endpoints.csv
      headers: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 625
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: f7b9d030-c6b0-4f55-8250-ab44785ea238
    type: regular
    task:
      id: f7b9d030-c6b0-4f55-8250-ab44785ea238
      version: -1
      name: Mail unhealthy endpoints report
      description: Sends an mail using Gmail/EWS.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs:
        complex:
          root: File
          accessor: EntryID
      attachNames: {}
      bcc: {}
      body: {}
      cc: {}
      from: {}
      htmlBody:
        complex:
          root: inputs.MessageBody
      replyTo: {}
      subject:
        simple: 'CortexXDR Discconcted endpoint '
      templateParams: {}
      to:
        complex:
          root: inputs.Email
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 995
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: f8f55d3a-dbc7-4cbb-8fc3-ab9e26aaa9da
    type: title
    task:
      id: f8f55d3a-dbc7-4cbb-8fc3-ab9e26aaa9da
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: f071927f-7367-4e42-8182-facbd054bfc4
    type: condition
    task:
      id: f071927f-7367-4e42-8182-facbd054bfc4
      version: -1
      name: Was an unhealthy endpoint found?
      description: ''''''
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "2"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: PaloAltoNetworksXDR.Endpoint
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: PaloAltoNetworksXDR.Endpoint.endpoint_status
            iscontext: true
          right:
            value:
              simple: LOST
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "6":
    id: "6"
    taskid: ce5dece1-91d9-4bee-8892-57192e30f5c6
    type: regular
    task:
      id: ce5dece1-91d9-4bee-8892-57192e30f5c6
      version: -1
      name: Count users and hosts
      description: Count the users and hosts involved in the incidents and insert the amount in the incident field,
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      accountid: {}
      accountname: {}
      addLabels: {}
      agentid: {}
      alertid: {}
      alertname: {}
      app: {}
      appendMultiSelect: {}
      applicationid: {}
      applicationname: {}
      assetid: {}
      assigneduser: {}
      assignmentgroup: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      blockedaction: {}
      bugtraq: {}
      caller: {}
      categorycount: {}
      city: {}
      closeNotes: {}
      closeReason: {}
      closetime: {}
      closingreason: {}
      closinguser: {}
      cloudservice: {}
      commandline: {}
      compliancenotes: {}
      costcenter: {}
      costcentercode: {}
      country: {}
      countryname: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cvssavailabilityrequirement: {}
      cvsscollateraldamagepotential: {}
      cvssconfidentialityrequirement: {}
      cvssintegrityrequirement: {}
      dbotMirrorDirection: {}
      dbotMirrorId: {}
      dbotMirrorInstance: {}
      dbotMirrorTags: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      department: {}
      dest: {}
      desthostname: {}
      destinationgeolocation: {}
      destinationhostname: {}
      destinationip: {}
      destinationips: {}
      destinationipv6: {}
      destinationmacaddress: {}
      destinationnetwork: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectedexternalhosts: {}
      detectedexternalips: {}
      detectedinternalhosts: {}
      detectedinternalips: {}
      detectedusers: {}
      detectionendtime: {}
      detectionid: {}
      detectionupdatetime: {}
      detectionurl: {}
      deviceexternalip: {}
      devicehash: {}
      devicelocalip: {}
      devicemodel: {}
      devicename: {}
      devicetime: {}
      displayname: {}
      dnsname: {}
      dstports: {}
      duration: {}
      email: {}
      emailauthenticitycheck: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailhtmlimage: {}
      emailinreplyto: {}
      emailkeywords: {}
      emaillabels: {}
      emaillatestmessage: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      errorcode: {}
      errormessage: {}
      escalation: {}
      eventaction: {}
      eventdescriptions: {}
      eventid: {}
      eventnames: {}
      events: {}
      eventtype: {}
      externaladdresses: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstname: {}
      firstseen: {}
      followup: {}
      givenname: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      highlevelcategories: {}
      hostname: {}
      hosts: {}
      id: {}
      incomingmirrorerror: {}
      infectedhosts: {}
      internaladdresses: {}
      investigationstage: {}
      isolated: {}
      jobcode: {}
      jobfamily: {}
      jobfunction: {}
      labels: {}
      lastmirroredintime: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastname: {}
      lastseen: {}
      lastupdatetime: {}
      leadership: {}
      listofrulesevent: {}
      location: {}
      locationregion: {}
      logsource: {}
      logsourcename: {}
      logsourcetype: {}
      lowlevelcategoriesevents: {}
      macaddress: {}
      maliciousbehavior: {}
      malwarefamily: {}
      malwarename: {}
      manageremailaddress: {}
      managername: {}
      md5: {}
      mobiledevicemodel: {}
      mobilephone: {}
      name: {}
      numberoflogsources: {}
      occurred: {}
      os: {}
      osversion: {}
      outgoingmirrorerror: {}
      owner: {}
      parentprocessid: {}
      personalemail: {}
      phase: {}
      phishingsubtype: {}
      phonenumber: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      postnatdestinationip: {}
      postnatdestinationport: {}
      postnatsourceip: {}
      postnatsourceport: {}
      prenatdestinationport: {}
      prenatsourceip: {}
      prenatsourceport: {}
      protocol: {}
      protocolevent: {}
      protocols: {}
      quarantined: {}
      ransomwareapproximatenumberofencryptedendpoints: {}
      ransomwarecryptocurrencyaddress: {}
      ransomwarecryptocurrencyaddresstype: {}
      ransomwaredataencryptionstatus: {}
      ransomwareemail: {}
      ransomwareencryptedfileowner: {}
      ransomwarenote: {}
      ransomwareonionaddress: {}
      ransomwarerecoverytool: {}
      ransomwarestrain: {}
      rating: {}
      rawevent: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      samaccountname: {}
      severity: {}
      sha256: {}
      signature: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcegeolocation: {}
      sourcehostname: {}
      sourceip: {}
      sourceips: {}
      sourceipv6: {}
      sourcemacaddress: {}
      sourcenetwork: {}
      sourceport: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcports: {}
      srcuser: {}
      starttime: {}
      state: {}
      streetaddress: {}
      subcategory: {}
      subtype: {}
      surname: {}
      systems: {}
      technicalowner: {}
      technicalownercontact: {}
      technicaluser: {}
      tenantname: {}
      terminatedaction: {}
      threatactor: {}
      ticketcloseddate: {}
      ticketnumber: {}
      ticketopeneddate: {}
      title: {}
      trafficdirection: {}
      triggeredsecurityprofile: {}
      type: {}
      unhealthyendpoints: {}
      uniqueports: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userid: {}
      username: {}
      usernames: {}
      users: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      workphone: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount:
        complex:
          root: PaloAltoNetworksXDR.Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.Endpoint.endpoint_status
                iscontext: true
              right:
                value:
                  simple: LOST
          accessor: endpoint_name
          transformers:
          - operator: count
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmanualseverity: {}
      xdrmediumseverityalertcount: {}
      xdrmodificationtime: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrstatusv2: {}
      xdrurl: {}
      xdrusercount:
        complex:
          root: PaloAltoNetworksXDR.Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.Endpoint.endpoint_status
                iscontext: true
              right:
                value:
                  simple: LOST
          accessor: users
          transformers:
          - operator: count
      zipcode: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "7":
    id: "7"
    taskid: bf16ece1-ed5d-4024-8a61-b5bec89beb23
    type: regular
    task:
      id: bf16ece1-ed5d-4024-8a61-b5bec89beb23
      version: -1
      name: Set endpoints grid
      description: Creates a grid table from items or key-value pairs.
      scriptName: SetGridField
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      columns:
        simple: Endpoint Name,Endpoint Status,Endpoint OS,Endpoint ID,Endpoint Last
          Seen
      context_path:
        simple: Unhealthy.Endpoints
      grid_id:
        simple: unhealthyendpoints
      keys:
        simple: endpoint_name,endpoint_status,os_type,endpoint_id,last_seen
      overwrite: {}
      sort_by: {}
      unpack_nested_elements: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1510
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "8":
    id: "8"
    taskid: 9d6ee1ad-bd18-48df-8d46-7492712ba5ff
    type: regular
    task:
      id: 9d6ee1ad-bd18-48df-8d46-7492712ba5ff
      version: -1
      name: Set unhealthy endpoints
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      append: {}
      key:
        simple: Unhealthy.Endpoints
      stringify: {}
      value:
        complex:
          root: PaloAltoNetworksXDR.Endpoint
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.Endpoint.endpoint_status
                iscontext: true
              right:
                value:
                  simple: LOST
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 1345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "9":
    id: "9"
    taskid: 5a3b4da5-eac3-4d96-88ce-48bb64b4bc1a
    type: condition
    task:
      id: 5a3b4da5-eac3-4d96-88ce-48bb64b4bc1a
      version: -1
      name: Email report?
      description: ''
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "3"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.Email
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {
      "5_2_yes": 0.55,
      "5_4_#default#": 0.1
    },
    "paper": {
      "dimensions": {
        "height": 1695,
        "width": 380,
        "x": 162.5,
        "y": 40
      }
    }
  }
inputs:
- key: LastSeenStartDate
  value: {}
  required: false
  description: 'Last seen start date, in relative timestamp - "1 Day" or  "7 days" '
  playbookInputQuery:
- key: LastSeenEndDate
  value: {}
  required: false
  description: "Last seen end date, in relative timestamp - \"1 Day\" or  \"7 days\"\
    \ \nFor the current day use \"0 days\""
  playbookInputQuery:
- key: Email
  value: {}
  required: false
  description: Email addresses to send the disconnected endpoints report.
  playbookInputQuery:
- key: MessageBody
  value:
    simple: |-
      This message contains an automatically generated report by Cortex XSOAR, including a list of unhealthy and disconnected Cortex XDR endpoints.
      Please investigate and remediate according to the organization's policy.
  required: false
  description: 'Body for the report email message. '
  playbookInputQuery:
outputs: []
tests:
- Cortex XDR endpoints health check test
fromversion: 5.5.0
